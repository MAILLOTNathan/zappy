name: C/C++ CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

env:
  MIRROR_URL: ${{ secrets.REPO_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dev deps
      run: |
         sudo apt-get -y update
         sudo apt-get -y install g++ cmake build-essential libpthread-stubs0-dev libgl1-mesa-dev libx11-dev libxrandr-dev libfreetype6-dev libglew-dev libjpeg-dev libsndfile1-dev libopenal-dev
    - name: Install OpenGL deps
      run: |
        sudo apt-get install libgl-dev libglfw3-dev libglm-dev
    - name: Install Python
      run: |
        sudo apt-get install python3 python3-pip
    - name: Install Python deps
      run: |
        pip3 install torch torchvision torchaudio tensorflow
    - name: Build
      run: |
        ./build.sh

  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 0
      - run: check.sh $(pwd) $(pwd)
      - run: cat coding-style-reports.log
      - run: |
          if [ -s coding-style-reports.log ]
          then
            echo "::group::Annotation"
            input=coding-style-reports.log
            exitcode=0
            while IFS= read -r line
            do
              if ! echo $line | grep "tests"
              then
                echo "::error:: $line"
                exitcode=1
              fi
            done < "$input"
            exit exitcode
          fi

  push_to_mirror:
    needs: [build, check_coding_style]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1.1.1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY }}
